stages:
  - build
  - deploy

variables:
  CI_REGISTRY: gitlab.flextech.asia:5050
  IMAGE_TAG: $CI_REGISTRY/5p-studio/os-app-abdrink-admin:$CI_COMMIT_REF_NAME

build:
  stage: build
  script:
    - echo $IMAGE_TAG-$CI_COMMIT_SHORT_SHA
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - DOCKER_BUILDKIT=1 docker build -t $IMAGE_TAG -t $IMAGE_TAG-$CI_COMMIT_SHORT_SHA -f dockerfiles/Dockerfile .
    - docker push $IMAGE_TAG-$CI_COMMIT_SHORT_SHA
    - docker push $IMAGE_TAG
  only:
    - develop
    - master
    - staging

deploy_develop:
  stage: deploy
  script:
    - echo image_tag $IMAGE_TAG ci_commit $CI_COMMIT_SHORT_SHA
    - sshpass -p $SERVER_PASS_7 ssh $SERVER_USER_7@$SERVER_HOST_7 "/home/ubuntu/DOCKER_DEV/docker_project deploy $SERVICE_NAME"
  environment:
    name: develop
  only:
    - develop

deploy_production:
  stage: deploy
  script:
    - sshpass -p $SERVER_PASS_3 ssh $SERVER_USER_3@$SERVER_HOST_3 "docker-compose pull $APP_NAME && docker-compose up --force-recreate -d $APP_NAME"
    - >
      curl --compressed -sS
      -H 'Connection: keep-alive'
      -u "${WEBHOOKD_BASIC_AUTH}"
      "${WEBHOOKD_URL}?application=${APP_NAME}&branch=${CI_COMMIT_BRANCH}&commit=${CI_COMMIT_SHA}&version=${VERSION}"
      &> /dev/stdout | tee -a /tmp/status
    - grep -q "Patching done!" /tmp/status; [ $? -eq 0 ] && exit 0 || exit 1

  environment:
    name: production
  only:
    - master
